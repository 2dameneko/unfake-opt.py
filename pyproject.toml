[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "unfake"
version = "1.0.4"
description = "High-performance tool for improving AI-generated pixel art"
readme = "README.md"
authors = [
    { name = "Benjamin Paine", email = "painebenjamin@gmail.com" }
]
license = { text = "MIT" }
keywords = [
    "pixel-art",
    "image-processing",
    "quantization",
    "ai-art",
    "optimization",
    "rust-python"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "opencv-python>=4.5.0",
    "Pillow>=9.0.0",
    "numpy>=1.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=22.0",
    "mypy>=0.990",
    "ruff>=0.0.261"
]
test = [
    "pytest>=7.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0"
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0"
]

[project.urls]
Homepage = "https://github.com/painebenjamin/unfake.py"
Repository = "https://github.com/painebenjamin/unfake.py"
"Bug Tracker" = "https://github.com/painebenjamin/unfake.py/issues"

[project.scripts]
unfake = "unfake:main"

[tool.maturin]
python-source = "src"
module-name = "unfake"
features = ["pyo3/extension-module"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.coverage.run]
source = ["unfake"]
omit = ["*/tests/*", "*/test_*"] 
